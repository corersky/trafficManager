<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuandu.erp.modules.business.dao.RechargeDao">
    
	<sql id="rechargeColumns">
		a.id AS "id",
		a.mobile,
		a.flow_size AS "flowSize",
		a.balance,
		a.type,
		a.product_id AS "productId",
		a.partner_orderno AS "partnerOrderNo",
		a.order_no AS "orderNo",
		a.notify_url AS "notifyUrl",
		a.STATUS AS "status",
		a.CREATE_BY AS "createBy.id",
		a.CREATE_DATE AS "createDate",
		a.UPDATE_BY AS "updateBy.id",
		a.UPDATE_DATE AS "updateDate",
		a.REMARKS AS "remarks",
		a.DEL_FLAG AS "delFlag",
		u.name AS "createBy.name"
	</sql>
	
	<sql id="rechargeJoins">
		LEFT JOIN sys_user u ON u.id = a.create_by
		LEFT JOIN sys_office o ON o.id = u.office_id
	</sql>
    
	<select id="get" resultType="Recharge">
		SELECT 
			<include refid="rechargeColumns"/>
		FROM business_recharge a
		<include refid="rechargeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Recharge">
		SELECT 
			<include refid="rechargeColumns"/>
		FROM business_recharge a
		<include refid="rechargeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="mobile != null and mobile != ''">
			AND a.mobile LIKE '%${mobile}%'
		</if>
		<if test="type != null and type != ''">
			AND a.type = #{type}
		</if>
		<if test="status != null and status != ''">
			AND a.STATUS = #{status}
		</if>
		<if test="beginDate != null and beginDate != '' and endDate != null and endDate != '' ">
			AND a.create_date BETWEEN #{beginDate} AND #{endDate}
		</if>
		<if test="createBy != null and createBy.id != '' and createBy.id !=null ">
			AND a.create_by = #{createBy.id}
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		
		ORDER BY a.update_date DESC
	</select>
	
	<select id="findAllList" resultType="Recharge">
		SELECT 
			<include refid="rechargeColumns"/>
		FROM business_recharge a
		<include refid="rechargeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} 
		ORDER BY a.update_date DESC
	</select>
	
	<insert id="insert">
		INSERT INTO business_recharge(
			ID,
			TYPE,
			MOBILE,
			FLOW_SIZE,
			BALANCE,
			PRODUCT_ID,
			PARTNER_ORDERNO,
			ORDER_NO,
			NOTIFY_URL,
			STATUS,
			CREATE_BY,
			CREATE_DATE,
			UPDATE_BY,
			UPDATE_DATE,
			REMARKS,
			DEL_FLAG
		) VALUES (
			#{id},
			#{type},
			#{mobile},
			#{flowSize},
			#{balance},
			#{productId},
			#{partnerOrderNo},
			#{orderNo},
			#{notifyUrl},
			#{status},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE business_recharge SET 	
			TYPE = #{type},
			STATUS = #{status},
			FLOW_SIZE = #{flowSize},
			UPDATE_BY = #{updateBy.id},
			UPDATE_DATE = #{updateDate},
			REMARKS = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="updateStatus">
		UPDATE business_recharge SET 	
			STATUS = #{status},
			UPDATE_BY = #{updateBy.id},
			UPDATE_DATE = #{updateDate}
		WHERE PARTNER_ORDERNO = #{partnerOrderNo}
	</update>
	
	<update id="delete">
		UPDATE business_recharge SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<select id="createOrder" resultType="string">
		SELECT NEXTVAL('recharge_order') FROM DUAL;
	</select>
	
</mapper>